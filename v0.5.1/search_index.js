var documenterSearchIndex = {"docs":
[{"location":"guide/guide/#User's-guide","page":"User's guide","title":"User's guide","text":"","category":"section"},{"location":"guide/guide/","page":"User's guide","title":"User's guide","text":"TBA","category":"page"},{"location":"#CitableTeiReaders.jl-Documentation","page":"Home","title":"CitableTeiReaders.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = CitableTeiReaders","category":"page"},{"location":"","page":"Home","title":"Home","text":"Read documents in TEI XML and other formats into citable text objects.","category":"page"},{"location":"man/#API-documentation","page":"API documentation","title":"API documentation","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"","category":"page"},{"location":"man/#Functions","page":"API documentation","title":"Functions","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"simpleAbReader(xml::AbstractString, urnBase::CtsUrn)\ntwocolumnReader(txt::AbstractString, urnPlaceHolder=nothing)\npoeticLineReader(xml::AbstractString, urnBase::CtsUrn)\nezxmlstring(n::EzXML.Node)","category":"page"},{"location":"man/#CitableTeiReaders.simpleAbReader-Tuple{AbstractString,CtsUrn}","page":"API documentation","title":"CitableTeiReaders.simpleAbReader","text":"simpleAbReader(xml, urnBase)\n\n\nRead a TEI document with 1-tier citation values on /TEI/text/body/ab elements.\n\nExamples\n\njulia>\ncorpus = simpleAbReader(xmlString, CtsUrn(\"urn:cts:lycian:tl56.v1:\") )\n\n\n\n\n\n","category":"method"},{"location":"man/#CitableTeiReaders.twocolumnReader","page":"API documentation","title":"CitableTeiReaders.twocolumnReader","text":"twocolumnReader(txt)\ntwocolumnReader(txt, urnPlaceHolder)\n\n\nRead a delimited-text file with CTS URN and text content using pipe character as delimiter.\n\n\n\n\n\n","category":"function"},{"location":"man/#CitableTeiReaders.poeticLineReader-Tuple{AbstractString,CtsUrn}","page":"API documentation","title":"CitableTeiReaders.poeticLineReader","text":"poeticLineReader(xml, urnBase)\n\n\nRead a TEI document with 1-tier citation values on /TEI/text/body/l elements.\n\n\n\n\n\n","category":"method"},{"location":"man/#CitableTeiReaders.ezxmlstring-Tuple{EzXML.Node}","page":"API documentation","title":"CitableTeiReaders.ezxmlstring","text":"ezxmlstring(n)\n\n\nSerialize an EzXML.Node to an XML string. If a node n was created by parsing an XML string, the output of ezxmlstring(n) should be XML equivalent to the source string.\n\n\n\n\n\n","category":"method"},{"location":"man/#Index","page":"API documentation","title":"Index","text":"","category":"section"},{"location":"man/","page":"API documentation","title":"API documentation","text":"","category":"page"}]
}
